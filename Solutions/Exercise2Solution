#Solution for exercise 2 of tuto 1 - Decision making
#Authors : Florence Blondiaux & Antoine de Comite

####################################################
#                  Function                        #
####################################################

def compute_SPRT(sigma,stop_time,true_dist=1):
  """
  Computes the time evolution of the likelihood ratio between left & right hypothesis

  Inputs : 
    sigma (double) :  standard deviation (noise around the real direction value)
    true_dist (0 or 1) : Which state is the true state.
    data (numpy array) : input data
  Returns : 
    evidence_history (numpy vector) : the history of cumulated evidence given
                                      generated data
    decision (int) : 1 for pR, 0 for pL
    data (numpy vector) : the generated sequences of data in this trial
  """
  muL = -1.0
  muR = 1.0

  pL = stats.norm(loc=-1, scale = sigma)
  pR = stats.norm(loc= 1, scale = sigma)

  
  # Compute the cumulated evidence
  # 1. Log likelihood ratio using the solution of the first exercise

  ll_ratio_vec = np.log(sigma/sigma) + 0.5*(data-1)**2/(sigma**2) - 0.5*(data+1)**2/(sigma**2)

  evidence_history = np.cumsum(ll_ratio_vec)
  # Depending on the real direction, we encode the correct decision
  if evidence_history[-1] >0: 
    decision = 1
  elif evidence_history[-1] < 0:
    decision = 0
  else:
    decision = np.random.randint(2)
  
  return evidence_history, decision, data

####################################################
#                  Tests                           #
####################################################

np.random.seed(1000)
sigma=3.5
num_sample=10
stop_time=150

evidence_history_list = []
for ii in range(num_samples):
  evidence_history, decision, data = compute_SPRT(sigma,true_dist,data)
  evidence_history_list.append(evidence_history)
  
fig, ax = plt.subplots()
ax.plot(np.zeros(np.max(list(map(len,evidence_history_list)))
for evidences in evidence_history_list:
  ax.plot(np.arange(len(evidences)),evidences)
  ax.set_xlabel("Time")
  ax.set_ylabel("Cumulated log likelihood ratio")
  ax.set_title("Log likelihood ratio trajectories under the fixed-time condition")
plt.show(fig)
